TO DO:
CRITICAL: Verify that all references to unused objects are removed

Change the way creatures move from using self.pos to sprite.rect (CRITICAL)

Settle on a consistent singleton design for manager classes

Make GameObject abc that extends the pygame.sprite.Sprite class:
    Add basic attributes that every game object needs

Make a GameStateManager to handle game states and transitions

Use pygame.math.vector2 to move???

Graphics Optimization:
    Make sure we're using culling
    Use pygame sprite groups, layered updates 
    Dirty sprites and dirty rects 
    
    Faster tile_grid blitting-- Blit all of the tiles to one surface and then draw the surface
    on draw()???
    Draw everything in batches with pygame.Surface.blits from a manager class

Asset Management:
    Add AssetManager class
    Load game state assets on demand when game states change

BUGs: (ctrl shift f search 'BUG')
    Rows and columns are getting swapped.

Mouse clicks need to be checked for left of right button

Any objects that call events.register_event(), should be forced (through
    inheritance??) to implement notify()

Calling set_colorkey(BLACK) is causing issues with the background images

Update() calls need to run on a delta time to achieve a real-time updating that doesn't 
    change depending on the machine that is running it

Make transition for Camera.center(). Have it gradually move to new position.

Fix hardcode (ctrl shift f search 'hardcode')

Make sure notify() is returning a stop flag when necessary